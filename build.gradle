apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.5

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

buildscript {
    ext.kotlin_version = '1.0.0-rc-1036'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'

def siteUrl = 'https://github.com/MeilCli/KLinq'
def gitUrl = 'https://github.com/MeilCli/KLinq.git'
def licenseUrl = 'https://github.com/MeilCli/KLinq/blob/master/LICENSE'
def userName = 'meilcli'
def libraryId = 'KLinq'
def desc = 'LINQ for Kotlin'

def bintray_group = 'net.meilcli'
def bintray_artifact = 'klinq'
def bintray_ver = '1.5'
def bintray_ver_desc = 'support sequence'

group = bintray_group
version = bintray_ver

bintray {
    user = userName
    key = project.property('bintray_api_key')
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = libraryId
        userOrg = userName
        licenses = ['MIT']
        vcsUrl = gitUrl
        websiteUrl = siteUrl
        issueTrackerUrl = siteUrl + '/issues'
        labels = ['kotlin']
        version {
            name = bintray_ver
            desc = bintray_ver_desc
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'jar'
            name desc
            url siteUrl
            groupId bintray_group
            artifactId bintray_artifact
            version bintray_ver
            developers {
                developer {
                    name userName
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
            licenses {
                license {
                    name 'The MIT License'
                    url licenseUrl
                    distribution 'repo'
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
